// <auto-generated />
using System;
using LastMiles.API.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LastMiles.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190106221303_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LastMiles.API.DataBase.Available_Role", b =>
                {
                    b.Property<int>("availablerole_id");

                    b.Property<string>("role_name");

                    b.HasKey("availablerole_id");

                    b.ToTable("Available_Roles");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Company", b =>
                {
                    b.Property<int>("company_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<int>("company_type_id");

                    b.Property<string>("name");

                    b.HasKey("company_id");

                    b.HasIndex("company_type_id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Company_Contact", b =>
                {
                    b.Property<int>("company_contact_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("company_id");

                    b.Property<string>("email");

                    b.Property<string>("mobile");

                    b.Property<string>("name");

                    b.HasKey("company_contact_id");

                    b.HasIndex("company_id");

                    b.ToTable("Company_Contact");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Company_Type", b =>
                {
                    b.Property<int>("Company_type_id");

                    b.Property<string>("desc");

                    b.Property<string>("name");

                    b.HasKey("Company_type_id");

                    b.ToTable("Company_Types");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Distributor", b =>
                {
                    b.Property<int>("distributor_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<string>("contact");

                    b.Property<int>("distributor_type_id");

                    b.Property<string>("gps_x");

                    b.Property<string>("gps_y");

                    b.Property<string>("name");

                    b.HasKey("distributor_id");

                    b.HasIndex("distributor_type_id");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Distributor_Company", b =>
                {
                    b.Property<int>("distributor_id");

                    b.Property<int>("company_id");

                    b.HasKey("distributor_id", "company_id");

                    b.HasIndex("company_id");

                    b.ToTable("Distributor_Companies");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Distributor_Retailer", b =>
                {
                    b.Property<int>("distributor_id");

                    b.Property<int>("retailer_id");

                    b.HasKey("distributor_id", "retailer_id");

                    b.HasIndex("retailer_id");

                    b.ToTable("Distributor_Retailers");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Distributor_Type", b =>
                {
                    b.Property<int>("distributor_type_id");

                    b.Property<string>("desc");

                    b.Property<string>("name");

                    b.HasKey("distributor_type_id");

                    b.ToTable("Distributor_Types");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Opening_Closing", b =>
                {
                    b.Property<int>("opening_closing_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("closing_time");

                    b.Property<DateTime>("opening_time");

                    b.Property<int>("retailer_disponibility_id");

                    b.HasKey("opening_closing_id");

                    b.HasIndex("retailer_disponibility_id");

                    b.ToTable("Opening_Closings");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Order", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date_creation");

                    b.Property<DateTime>("date_requested_by");

                    b.Property<DateTime>("date_shipped");

                    b.Property<int>("order_receiver_id");

                    b.Property<int>("order_sender_id");

                    b.Property<int>("order_type_id");

                    b.Property<string>("status");

                    b.HasKey("order_id");

                    b.HasIndex("order_receiver_id");

                    b.HasIndex("order_sender_id");

                    b.HasIndex("order_type_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Order_Detail", b =>
                {
                    b.Property<int>("order_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("order_id");

                    b.Property<int>("product_id");

                    b.Property<int>("quantity");

                    b.HasKey("order_detail_id");

                    b.HasIndex("order_id");

                    b.HasIndex("product_id");

                    b.ToTable("Order_Detail");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Order_Receiver", b =>
                {
                    b.Property<int>("order_receiver_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_of_order_receiving_party");

                    b.Property<string>("name_order_receiving_party");

                    b.Property<string>("order_receiving_party_type");

                    b.HasKey("order_receiver_id");

                    b.ToTable("Order_Receiver");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Order_Sender", b =>
                {
                    b.Property<int>("order_sender_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_of_order_sending_party");

                    b.Property<string>("name_order_sending_party");

                    b.Property<string>("order_sending_party_type");

                    b.HasKey("order_sender_id");

                    b.ToTable("Order_Sender");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Order_Type", b =>
                {
                    b.Property<int>("order_type_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc");

                    b.Property<string>("name");

                    b.HasKey("order_type_id");

                    b.ToTable("Order_Type");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Permission", b =>
                {
                    b.Property<int>("permission_id");

                    b.Property<string>("desc");

                    b.HasKey("permission_id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("company_id");

                    b.Property<string>("desc");

                    b.Property<string>("image_1");

                    b.Property<string>("image_2");

                    b.Property<string>("name");

                    b.Property<int>("product_Category_id");

                    b.Property<double>("unitprice");

                    b.HasKey("product_id");

                    b.HasIndex("company_id");

                    b.HasIndex("product_Category_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Product_Category", b =>
                {
                    b.Property<int>("product_Category_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc");

                    b.Property<string>("name");

                    b.HasKey("product_Category_id");

                    b.ToTable("Product_Category");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Retailer", b =>
                {
                    b.Property<int>("retailer_id");

                    b.Property<string>("address");

                    b.Property<int>("city_id");

                    b.Property<string>("code");

                    b.Property<string>("desc");

                    b.Property<string>("gps_x");

                    b.Property<string>("gps_y");

                    b.Property<string>("name");

                    b.Property<string>("picture1");

                    b.Property<string>("picture2");

                    b.Property<int>("quater_id");

                    b.Property<int>("retailer_type_id");

                    b.Property<int>("zone_id");

                    b.HasKey("retailer_id");

                    b.HasIndex("retailer_type_id");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Retailer_Disponibility", b =>
                {
                    b.Property<int>("retailer_disponibility_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("comment");

                    b.Property<string>("day");

                    b.Property<int>("opening_closing_id");

                    b.Property<int>("retailer_id");

                    b.HasKey("retailer_disponibility_id");

                    b.HasIndex("retailer_id");

                    b.ToTable("Retailer_Disponibilities");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Retailer_Type", b =>
                {
                    b.Property<int>("retailer_type_id");

                    b.Property<string>("desc");

                    b.Property<string>("name");

                    b.HasKey("retailer_type_id");

                    b.ToTable("Retailer_Types");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Role_Creation_Possibility", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("availablerole_id");

                    b.Property<int>("UserId");

                    b.HasKey("RoleId", "availablerole_id");

                    b.HasIndex("availablerole_id");

                    b.ToTable("Role_Creation_Possibility");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Role_Permission", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("permission_id");

                    b.Property<int>("UserId");

                    b.HasKey("RoleId", "permission_id");

                    b.HasIndex("permission_id");

                    b.ToTable("Role_Permission");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<int>("EntityUserMapTo_Id");

                    b.Property<string>("EntityUserMapTo_Name")
                        .IsRequired();

                    b.Property<string>("EntityUserMapTo_Type")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<DateTime>("LastActive");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserAccessingEntityWithPermissions")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.User_Role", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Company", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Company_Type", "company_Type")
                        .WithMany("list_Companies")
                        .HasForeignKey("company_type_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Company_Contact", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Company")
                        .WithMany("contacts")
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Distributor", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Distributor_Type", "distributor_type")
                        .WithMany("list_distributors")
                        .HasForeignKey("distributor_type_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Distributor_Company", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Company", "Company")
                        .WithMany("list_distributor_companies")
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Distributor", "distributor")
                        .WithMany("list_distributor_companies")
                        .HasForeignKey("distributor_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Distributor_Retailer", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Distributor", "distributor")
                        .WithMany("list_distributor_retailer")
                        .HasForeignKey("distributor_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Retailer", "retailer")
                        .WithMany("list_distributor_retailer")
                        .HasForeignKey("retailer_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Opening_Closing", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Retailer_Disponibility", "retailer_disponibility")
                        .WithMany("list_open_closing_time")
                        .HasForeignKey("retailer_disponibility_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Order", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Order_Receiver", "order_receiver")
                        .WithMany("list_orders")
                        .HasForeignKey("order_receiver_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Order_Sender", "order_sender")
                        .WithMany("list_orders")
                        .HasForeignKey("order_sender_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Order_Type", "order_type")
                        .WithMany("list_order")
                        .HasForeignKey("order_type_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Order_Detail", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Order", "order")
                        .WithMany("list_order_details")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Product", "product")
                        .WithMany("list_order_details")
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Product", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Company", "company")
                        .WithMany("list_product")
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Product_Category", "product_Category")
                        .WithMany("list_product")
                        .HasForeignKey("product_Category_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Retailer", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Retailer_Type", "retailer_type")
                        .WithMany("list_retailer")
                        .HasForeignKey("retailer_type_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Retailer_Disponibility", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Retailer", "retailer")
                        .WithMany("list_retailer_disponibility")
                        .HasForeignKey("retailer_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Role_Creation_Possibility", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Role", "Role")
                        .WithMany("list_role_creation_possibility")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Available_Role", "available_role")
                        .WithMany("list_role_creation_possibility")
                        .HasForeignKey("availablerole_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.Role_Permission", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Role", "Role")
                        .WithMany("list_role_permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.Permission", "permission")
                        .WithMany("list_role_permissions")
                        .HasForeignKey("permission_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LastMiles.API.DataBase.User_Role", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LastMiles.API.DataBase.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("LastMiles.API.DataBase.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
